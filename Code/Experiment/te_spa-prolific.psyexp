<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.1.2">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="sounddevice" valType="str"/>
    <Param name="Completed URL" updates="None" val="https://app.prolific.co/submissions/complete?cc=30F4EAC3 " valType="str"/>
    <Param name="Data filename" updates="None" val="u'Data/%s_%s_%s' % (expName, expInfo['date'], expInfo['participant'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="False" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="https://app.prolific.co/submissions/complete?cc=30F4EAC3" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="False" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="norm" valType="str"/>
    <Param name="Use version" updates="None" val="latest" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1200, 900]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-1,-1,-1]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="TranslationElicitation_spa" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="error" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <TextComponent name="taskText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>
        <Param name="name" updates="None" val="taskText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="trialSound.status == FINISHED" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="'&gt; ' + $inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <SoundComponent name="trialSound">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="hamming" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="trialSound" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="sound" updates="set every repeat" val="$soundfile" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
        <Param name="volume" updates="constant" val="1" valType="code"/>
      </SoundComponent>
      <CodeComponent name="trialCode">
        <Param name="Begin Experiment" updates="constant" val="inputText = '';" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="inputText = &quot;&quot;;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="keysAllowed = [&quot;q&quot;, &quot;w&quot;, &quot;e&quot;, &quot;r&quot;, &quot;t&quot;, &quot;y&quot;, &quot;u&quot;, &quot;i&quot;, &quot;o&quot;, &quot;p&quot;, &quot;a&quot;, &quot;s&quot;, &quot;d&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;semicolon&quot;, &quot;apostrophe&quot;, &quot;z&quot;, &quot;x&quot;, &quot;c&quot;, &quot;v&quot;, &quot;b&quot;, &quot;n&quot;, &quot;m&quot;, &quot;escape&quot;, &quot;space&quot;, &quot;return&quot;, &quot;backspace&quot;];&amp;#10;inputText = &quot;&quot;;&amp;#10;isAccented = false;&amp;#10;error = false;&amp;#10;trialClock.reset()&amp;#10;keyPressTime = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="keysAllowed = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'semicolon', 'apostrophe', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'escape', 'space', 'return', 'backspace']&amp;#10;inputText = ''&amp;#10;debugText = ''&amp;#10;isAccented = False&amp;#10;error = False&amp;#10;keyPressTime = 0&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys(keyList = keysAllowed)&amp;#10;&amp;#10;i = 0&amp;#10;&amp;#10;if trialSound.status==FINISHED: # if audio has finished...&amp;#10;&amp;#10;    if len(keys): # if a key has been pressed...&amp;#10;    &amp;#10;        if 'return' in keys[i]: # and it's 'return'&amp;#10;            thisExp.addData('trialOffset', t) # save time&amp;#10;            thisExp.addData('keyPressTime', t) # save time&amp;#10;            continueRoutine = False&amp;#10;        &amp;#10;        elif 'escape' in keys[i]: # and it's 'escape'...&amp;#10;            thisExp.addData('trialOffset', t) # save time&amp;#10;            core.quit()  # exit&amp;#10;        &amp;#10;        elif keys[i]=='space': # and it's 'space'...&amp;#10;            inputText = inputText + ' ' # add a space&amp;#10;        &amp;#10;        elif keys[i] == 'backspace': # and it's 'backspace'&amp;#10;            inputText = inputText[:-1] # remove last character&amp;#10;            keyPressTime = t # get time&amp;#10;            error = True        &amp;#10;        elif 'minus' in keys[i]: # &amp;#10;            inputText += &quot;'&quot; #add apostrophe&amp;#10;            &amp;#10;        elif 'apostrophe' in keys[i]: # and it's apostrophe&amp;#10;            isAccented = True # flag 'accent' for subsequent keys&amp;#10;&amp;#10;        elif 'semicolon' in  keys[i]: # if 'semicolon' is pressed&amp;#10;            inputText += '\u00d1' # write 'ñ'&amp;#10;        &amp;#10;        else:&amp;#10;            if isAccented: # and accent is flagged&amp;#10;                if 'a' in keys[i]: # and 'a' is pressed&amp;#10;                    inputText += '\u00c1' # write &quot;á&quot;&amp;#10;                    isAccented = False # remove accent flag for subsequent keys&amp;#10;                elif 'e' in keys[i]: # and 'e' is pressed&amp;#10;                    inputText += '\u00c9'# write &quot;é&quot;&amp;#10;                    isAccented = False # remove accent flag for subsequent keys&amp;#10;                elif 'i' in keys[i]: # and 'i' is pressed&amp;#10;                    inputText += '\u00cd' # write &quot;í&quot;&amp;#10;                    isAccented = False # remove accent flag for subsequent keys&amp;#10;                elif 'o' in keys[i]: # and 'ó' is pressed&amp;#10;                    inputText += '\u00d3' # write &quot;ó&quot;&amp;#10;                    isAccented = False # remove accent flag for subsequent keys&amp;#10;                elif 'u' in keys[i]: # and 'u' is pressed&amp;#10;                    inputText += '\u00da' # write &quot;ú&quot;&amp;#10;                    isAccented = False # remove accent flag for subsequent keys&amp;#10;            else:&amp;#10;                inputText += keys[i].upper()&amp;#10;&amp;#10;    # save data&amp;#10;        thisExp.addData('keyPressed', keys[i]) # save pressed key&amp;#10;        thisExp.addData('keyPressTime', t) # save time&amp;#10;        thisExp.addData('inputText', inputText) # save text&amp;#10;        thisExp.addData('error', error) # save time&amp;#10;        thisExp.nextEntry()&amp;#10;        i = i+1&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="taskText.setText((&quot;&gt; &quot; + inputText));&amp;#10;&amp;#10;var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: keysAllowed});&amp;#10;i = 0;&amp;#10;if ((trialSound.status === PsychoJS.Status.FINISHED)) {&amp;#10;    if (keys.length) {&amp;#10;        keyPressTime = trialClock.getTime();&amp;#10;        if (_pj.in_es6(&quot;return&quot;, keys[i])) {&amp;#10;            inputText = &quot;&quot;;&amp;#10;            psychoJS.experiment.addData(&quot;trialOffset&quot;, t);&amp;#10;            psychoJS.experiment.addData(&quot;keyPressTime&quot;, t);&amp;#10;            continueRoutine = false;&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;escape&quot;, keys[i])) {&amp;#10;                psychoJS.experiment.addData(&quot;trialOffset&quot;, t);&amp;#10;                psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;            } else {&amp;#10;                if ((keys[i] === &quot;space&quot;)) {&amp;#10;                    inputText = (inputText + &quot; &quot;);&amp;#10;                } else {&amp;#10;                    if ((keys[i] === &quot;backspace&quot;)) {&amp;#10;                        inputText = inputText.slice(0, (- 1));&amp;#10;                        error = true;&amp;#10;                    } else {&amp;#10;                        if (_pj.in_es6(&quot;minus&quot;, keys[i])) {&amp;#10;                            inputText += &quot;'&quot;;&amp;#10;                        } else {&amp;#10;                            if (_pj.in_es6(&quot;apostrophe&quot;, keys[i])) {&amp;#10;                                isAccented = true;&amp;#10;                            } else {&amp;#10;                                if (_pj.in_es6(&quot;semicolon&quot;, keys[i])) {&amp;#10;                                    inputText += &quot;\u00d1&quot;;&amp;#10;                                } else {&amp;#10;                                    if (isAccented) {&amp;#10;                                        if (_pj.in_es6(&quot;a&quot;, keys[i])) {&amp;#10;                                            inputText += &quot;\u00c1&quot;;&amp;#10;                                            isAccented = false;&amp;#10;                                        } else {&amp;#10;                                            if (_pj.in_es6(&quot;e&quot;, keys[i])) {&amp;#10;                                                inputText += &quot;\u00c9&quot;;&amp;#10;                                                isAccented = false;&amp;#10;                                            } else {&amp;#10;                                                if (_pj.in_es6(&quot;i&quot;, keys[i])) {&amp;#10;                                                    inputText += &quot;\u00cd&quot;;&amp;#10;                                                    isAccented = false;&amp;#10;                                                } else {&amp;#10;                                                    if (_pj.in_es6(&quot;o&quot;, keys[i])) {&amp;#10;                                                        inputText += &quot;\u00d3&quot;;&amp;#10;                                                        isAccented = false;&amp;#10;                                                    } else {&amp;#10;                                                        if (_pj.in_es6(&quot;u&quot;, keys[i])) {&amp;#10;                                                            inputText += &quot;\u00da&quot;;&amp;#10;                                                            isAccented = false;&amp;#10;                                                        }&amp;#10;                                                    }&amp;#10;                                                }&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    } else {&amp;#10;                                        inputText += keys[i].toUpperCase();&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;        psychoJS.experiment.addData(&quot;keyPressed&quot;, keys[i]);&amp;#10;        psychoJS.experiment.addData(&quot;keyPressTime&quot;, keyPressTime);&amp;#10;        psychoJS.experiment.addData(&quot;inputText&quot;, inputText);&amp;#10;        psychoJS.experiment.addData(&quot;error&quot;, error);&amp;#10;        psychoJS.experiment.nextEntry();&amp;#10;        i = (i + 1);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="trialCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="setup">
      <TextComponent name="setupTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="setupTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="PREPARACIÓN" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="setupText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="setupText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Si es posible, utiliza Chrome o Mozilla.&amp;#10;&amp;#10;Utiliza un ordenador (no una tablet o un teléfono móvil)&amp;#10;&amp;#10;Utiliza auriculares&amp;#10;&amp;#10;Cierra todas las pestañas de tu navegador, excepto esta&amp;#10;&amp;#10;No cambies de pestaña en el navegador&amp;#10;&amp;#10;Si, por alguna razón, reinicias el estudio (por ejemplo, al haber actualizado la página o por un corte de internet), háznoslo saber escribiendo a gonzalo.garciadecastro@upf.edu." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="setupTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="setupTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="setupCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="// align text to the left&amp;#10;setupText.setAlignHoriz(&quot;left&quot;);&amp;#10;welcomeText.setAlignHoriz(&quot;left&quot;);&amp;#10;descriptionText.setAlignHoriz(&quot;left&quot;);&amp;#10;voluntaryText.setAlignHoriz(&quot;left&quot;);&amp;#10;contactText.setAlignHoriz(&quot;left&quot;);&amp;#10;confidentialityText.setAlignHoriz(&quot;left&quot;);&amp;#10;informationText.setAlignHoriz(&quot;left&quot;);&amp;#10;consentText.setAlignHoriz(&quot;left&quot;);&amp;#10;languageL1Text.setAlignHoriz(&quot;left&quot;);&amp;#10;//languageL2Text.setAlignHoriz(&quot;left&quot;);&amp;#10;//languageL2OralText.setAlignHoriz(&quot;left&quot;);&amp;#10;//languageL2WrittenText.setAlignHoriz(&quot;left&quot;);&amp;#10;//languageL3Text.setAlignHoriz(&quot;left&quot;);&amp;#10;//languageL3OralText.setAlignHoriz(&quot;left&quot;);&amp;#10;//languageL3WrittenText.setAlignHoriz(&quot;left&quot;);&amp;#10;languageCatalanOralText.setAlignHoriz(&quot;left&quot;);&amp;#10;languageCatalanWrittenText.setAlignHoriz(&quot;left&quot;);&amp;#10;demoAgeText.setAlignHoriz(&quot;left&quot;);&amp;#10;demoSexText.setAlignHoriz(&quot;left&quot;);&amp;#10;demoEducationText.setAlignHoriz(&quot;left&quot;);&amp;#10;demoCityText.setAlignHoriz(&quot;left&quot;);&amp;#10;demoVisionText.setAlignHoriz(&quot;left&quot;);&amp;#10;demoLanguageText.setAlignHoriz(&quot;left&quot;);&amp;#10;setupLocationText.setAlignHoriz(&quot;left&quot;);&amp;#10;setupNoiseText.setAlignHoriz(&quot;left&quot;);&amp;#10;instructionsText.setAlignHoriz(&quot;left&quot;);&amp;#10;instructions2Text.setAlignHoriz(&quot;left&quot;);&amp;#10;beginText.setAlignHoriz(&quot;left&quot;);&amp;#10;farewellText.setAlignHoriz(&quot;left&quot;);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# align text to the left&amp;#10;setupText.alignText = &quot;left&quot;&amp;#10;welcomeText.alignText = &quot;left&quot;&amp;#10;descriptionText.alignText = &quot;left&quot;&amp;#10;voluntaryText.alignText = &quot;left&quot;&amp;#10;contactText.alignText = &quot;left&quot;&amp;#10;confidentialityText.alignText = &quot;left&quot;&amp;#10;informationText.alignText = &quot;left&quot;&amp;#10;consentText.alignText = &quot;left&quot;&amp;#10;languageL1Text.alignText = &quot;left&quot;&amp;#10;#languageL2Text.alignText = &quot;left&quot;&amp;#10;#languageL2OralText.alignText = &quot;left&quot;&amp;#10;#languageL2WrittenText.alignText = &quot;left&quot;&amp;#10;#languageL3Text.alignText = &quot;left&quot;&amp;#10;#languageL3OralText.alignText = &quot;left&quot;&amp;#10;#languageL3WrittenText.alignText = &quot;left&quot;&amp;#10;languageCatalanOralText.alignText = &quot;left&quot;&amp;#10;languageCatalanWrittenText.alignText = &quot;left&quot;&amp;#10;demoAgeText.alignText = &quot;left&quot;&amp;#10;demoSexText.alignText = &quot;left&quot;&amp;#10;demoEducationText.alignText = &quot;left&quot;&amp;#10;demoCityText.alignText = &quot;left&quot;&amp;#10;demoVisionText.alignText = &quot;left&quot;&amp;#10;demoLanguageText.alignText = &quot;left&quot;&amp;#10;setupLocationText.alignText = &quot;left&quot;&amp;#10;setupNoiseText.alignText = &quot;left&quot;&amp;#10;instructionsText.alignText = &quot;left&quot;&amp;#10;instructions2Text.alignText = &quot;left&quot;&amp;#10;beginText.alignText = &quot;left&quot;&amp;#10;farewellText.alignText = &quot;left&quot;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="setupCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="welcome">
      <TextComponent name="welcomeTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="welcomeTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="BIENVENIDO/A" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="welcomeText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="welcomeText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Este es un estudio diseñado por investigadores/as de la Universitat Pompeu Fabra (Barcelona, España) y la Universidad de Oxford (Oxford, Reino Unido). Su objetivo es investigar cómo bebés y adultos procesan palabras en una lengua desconocida. Los audios que escucharás durante el estudio están dirigidos a bebés. &amp;#10;&amp;#10;Se te ha invitado/a a participar, dado que tienes entre 18 y 25 años y eres hablante de castellano sin conocimientos de catalán." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="welcomeTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="welcomeTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="welcomeCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="welcomeCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="description">
      <TextComponent name="descriptionTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="descriptionTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="DESCRIPCIÓN" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="descriptionText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="descriptionText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Primero te pediremos que completes un BREVE CUESTIONARIO sobre tu perfil lingüístico, nivel educativo, etc.&amp;#10;&amp;#10;En el ESTUDIO escucharás un serie de palabras en catalán. Tu tarea consistirá en ADIVINAR la TRADUCCIÓN de cada palabra en CASTELLANO y ESCRIBIR tu respuesta utilizando el teclado.&amp;#10;&amp;#10;El estudio durará 30 minutos aproximadamente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="descriptionTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="descriptionTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="descriptionCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="descriptionCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="voluntary">
      <TextComponent name="voluntaryTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="voluntaryTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿ES OBLIGATORIO QUE PARTICIPE?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="voluntaryText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="voluntaryText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Tu participación en este estudio es COMPLETAMENTE voluntaria. Podrás abandonar el estudio en cualquier momento pulsando la tecla ESC. Sin embargo, únicamente recibirás la compensación por tu participación si lo completas." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="voluntaryTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="voluntaryTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="voluntaryCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="voluntaryCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="contact">
      <TextComponent name="contactTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="contactTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CONTACTO" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="contactText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="contactText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Si tienes cualquier pregunta sobre este estudio, por favor contacta con el equipo de investigación:&amp;#10;Email: gonzalo.garciadecastro@upf.edu&amp;#10;&amp;#10;Investigadores/as Principales: Núria Sebastian-Galles y Kim Plunkett&amp;#10;Investigadores: Gonzalo García-Castro y Serene Siow&amp;#10;&amp;#10;Center for Brain and Cognition, Universitat Pompeu Fabra&amp;#10;Department of Experimental Psychology, University of Oxford" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="contactTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="contactTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="contactCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="contactCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="information">
      <TextComponent name="informationTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="informationTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿NECESITAS MÁS INFORMACIÓN?" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="informationText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="informationText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Si tienes alguna duda sobre algún aspecto de este estudio, por favor ponte en contacto  con Gonzalo García-Castro (gonzalo.garciadecastro@upf.edu), y haremos lo posible para responder tus preguntas. En caso de que desees hacer una queja formal, por favor, contacta con el/la responsable del University of Oxford Central University Research Ethics Committee, quien tratará de resolver el problema cuanto antes.&amp;#10;&amp;#10;Medical Sciences Interdivisional Research Ethics Committee;&amp;#10;Email: ethics@medsci.ox.ac.uk" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="informationTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="informationTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="informationCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="informationCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="consent">
      <TextComponent name="consentTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="consentTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CONSENTIMIENTO INFORMADO" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="consentText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="consentText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="AL PRESIONAR LA TECLA DEL ESPACIO, doy mi consentimiento para participar en este estudio. He tomado esta decisión basándome en la información que he leído en el consentimiento informado. He tenido la oportunidad de recibir información adicional sobre el estudio, y comprendo que podré pedir más información en el futuro. Comprendo que puedo retirar este consentimiento en cualquier momento." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="consentTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="consentTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="consentKey">
        <Param name="allowedKeys" updates="constant" val="'space', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="consentKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="consentCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="consentCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions">
      <TextComponent name="instructionsTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="instructionsTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INSTRUCCIONES" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instructionsText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="instructionsText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="A continuación escucharás palabras a través de tus auriculares.&amp;#10;&amp;#10;Las palabras estarán en catalán y han sido grabadas como si estuvieran dirigidas a bebés. Tendrás que ADIVINAR la traducción de cada palabra al CASTELLANO.&amp;#10;&amp;#10;Empieza a escribir tan pronto como tengas una respuesta. Es posible que no la sepas. Escribe lo que creas que es más probable. DEBES escribir una respuesta PARA CADA PALABRA.&amp;#10;&amp;#10;CORRIGE errores utilizando la tecla de BORRAR como lo harías normalmente.&amp;#10;&amp;#10;Tras escribir la traducción, presiona ENTER para continuar con la siguiente palabra." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instructionsTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="instructionsTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="instructionsKeys">
        <Param name="allowedKeys" updates="constant" val="'space', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instructionsKeys" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="instructionsCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instructionsCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions2">
      <TextComponent name="instructions2TextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="instructions2TextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INSTRUCCIONES" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instructions2Text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="instructions2Text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Ajusta el volumen para que las palabras se oigan de forma clara durante estos ensayos de práctica, para evitar tener que hacerlo durante el experimento." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="instructions2TextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="instructions2TextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona ESPACIO para comenzar los 5 ensayos de PRACTICA &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="instructions2Code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  core.quit();&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="instructions2Code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="begin">
      <TextComponent name="beginText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="beginText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Has finalizado los ensayos de PRÁCTICA." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="beginNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="beginNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona ESPACIO para COMENZAR &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="beginCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="beginCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="farewell">
      <TextComponent name="farewellText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="farewellText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¡Enhorabuena!&amp;#10;&amp;#10;Has terminado.&amp;#10;&amp;#10;MUCHAS GRACIAS POR TU PARTICIPACIÓN.&amp;#10;&amp;#10;Si tienes dudas, ponte en contacto con nosotros: gonzalo.garciadecastro@upf.edu&amp;#10;&amp;#10;A continuación, te redirigiremos a la web de Prolific.&amp;#10;&amp;#10;Por favor, espera a ser redigirido/a a Prolific. De lo contrario, no podrás recoger tu compensación." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="farewellTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="farewellTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para salir &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="farewellCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space', 'return'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;, &quot;return&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="farewellCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="confidentiality">
      <TextComponent name="confidentialityTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="confidentialityTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CONFIDENCIALIDAD" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="confidentialityText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="confidentialityText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Tu respuestas serán completamente ANÓNIMAS, y tomaremos las medidas necesarias para que se mantengan como tal.&amp;#10;&amp;#10;SE GUARDARÁN tus datos en un archivo protegido por contraseña y SE PODRÁN UTILIZAR DE MANERA COMPLETAMENTE ANONIMIZADA en publicaciones académicas. NO REGISTRAREMOS tu dirección de IP. Los datos resultantes de este estudio se archivarán durante un mínimo de tres años tras ser publicados.&amp;#10;&amp;#10;Nos gustaría tener tu permiso para utilizar tus datos anonimizados para estudios futuros y para COMPARTIRLOS con otros equipos de investigación (ej., a través de bases de datos online). SE ELIMINARÁ cualquier información personal que pudiera identificarte O SE REEMPLAZARÁ antes de que los archivos SE COMPARTAN O SE PUBLIQUEN.&amp;#10;&amp;#10;Este proyecto HA SIDO APROBADO POR  el University of Oxford Central University Research Ethics Committee, R60939/RE007." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="confidentialityTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="confidentialityTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pulsa ESPACIO para continuar &gt;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="confidentialityCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()&amp;#10;elif ('space' in keys):&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if ((keys.includes(&quot;escape&quot;))) {&amp;#10;  psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;} else if ((keys.includes(&quot;space&quot;, keys))) {&amp;#10;    continueRoutine = false;&amp;#10;  }&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="confidentialityCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="fixation">
      <TextComponent name="fixationText">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.2" valType="code"/>
        <Param name="name" updates="None" val="fixationText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="questionnaire">
      <TextComponent name="questionnaireTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="questionnaireTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="questionnaireText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="questionnaireText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$itemText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="questionnaireTextResponse">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="questionnaireTextResponse" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.6)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="questionnaireTextDebug">
        <Param name="color" updates="constant" val="blue" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="questionnaireTextDebug" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$debugText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="questionnaireCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;typeItems = [&quot;language2&quot;, &quot;language3&quot;, &quot;demographicsAge&quot;, &quot;demographicsCity&quot;];&amp;#10;psychopy.event.clearEvents();&amp;#10;keys = &quot;&quot;;&amp;#10;inputText = &quot;&quot;;&amp;#10;isAccented = false;&amp;#10;debugText = &quot;&quot;;&amp;#10;if (_pj.in_es6(itemLabel, [&quot;language2Oral&quot;, &quot;language2Written&quot;, &quot;language3Oral&quot;, &quot;language3Written&quot;])) {&amp;#10;    if (_pj.in_es6(language2, &quot;&quot;)) {&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(itemLabel, [&quot;language3Oral&quot;, &quot;language3Written&quot;])) {&amp;#10;            if (_pj.in_es6(language3, &quot;&quot;)) {&amp;#10;                continueRoutine = false;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# if language2 or language3 were left blank, skip questions related to them&amp;#10;typeItems = [&quot;language2&quot;, &quot;language3&quot;, &quot;demographicsAge&quot;, &quot;demographicsCity&quot;];&amp;#10;# initialise variables&amp;#10;psychopy.event.clearEvents()&amp;#10;keys = ''&amp;#10;inputText = ''&amp;#10;isAccented = False&amp;#10;debugText = ''&amp;#10;&amp;#10;if (itemLabel in ['language2Oral', 'language2Written', 'language3Oral', 'language3Written']):&amp;#10;    if (language2 in ''):&amp;#10;        continueRoutine = False&amp;#10;    elif (itemLabel in ['language3Oral', 'language3Written']):&amp;#10;        if (language3 in ''):&amp;#10;            continueRoutine = False&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;i = 0 # index whether how many keys have been previously pressed&amp;#10;print('NO KEY PRESSED')&amp;#10;&amp;#10;# Keys are mapped onto a Spanish keyboard&amp;#10;&amp;#10;if len(keys): # if any key has been pressed...&amp;#10;    print('KEY PRESSED')&amp;#10;    debugText += keys[i]&amp;#10;&amp;#10;     # ... and ESCAPE is pressed, quit experiment&amp;#10;    if keys[i]=='escape':&amp;#10;        print('ESCAPE')&amp;#10;        core.quit()&amp;#10;       &amp;#10;    # and item is 2 or 3...&amp;#10;    if itemLabel in typeItems:&amp;#10;        print('itemLabel is in typeItems')&amp;#10;        # ... and RETURN is pressed, stop trial&amp;#10;        if (keys[i]=='return'):&amp;#10;            print('RETURN')&amp;#10;            if (itemLabel=='language2'):&amp;#10;                language2 = inputText&amp;#10;                if language2=='':&amp;#10;                    language3=='':&amp;#10;                thisExp.addData('questionnaireResponse', inputText) # save data&amp;#10;                continueRoutine = False &amp;#10;            elif (itemLabel=='language3'):&amp;#10;                language3 = inputText&amp;#10;                thisExp.addData('questionnaireResponse', inputText) # save data&amp;#10;                continueRoutine = False &amp;#10;            elif (itemLabel=='demographicsAge' or itemLabel=='demographicsCity'):&amp;#10;                if (inputText != ''):&amp;#10;                    thisExp.addData('questionnaireResponse', inputText) # save data&amp;#10;                    continueRoutine = False &amp;#10;                    &amp;#10;            # ... and BACKSPACE is pressed, delete last character&amp;#10;            else:&amp;#10;                print('itemLabel NOT in typeItems')&amp;#10;&amp;#10;                if keys[i]=='backspace':&amp;#10;                    inputText = inputText[:-1]&amp;#10;                    # and 'minus' is pressed, add apostrophe&amp;#10;                elif keys[i]=='minus':&amp;#10;                    inputText += &quot;'&quot;&amp;#10;                elif keys[i]=='semicolon': # if 'semicolon' is pressed, write 'ñ'&amp;#10;                    inputText += '\u00d1' &amp;#10;                # and 'apostrophe' is pressed, flag accent&amp;#10;                elif keys[i]=='apostrophe':&amp;#10;                    isAccented = True&amp;#10;                    # ... and any other allowed key is pressed, print it&amp;#10;                elif (isAccented): # if accent is flagged&amp;#10;                    if keys[i]=='a': # and 'a' is pressed&amp;#10;                        inputText += '\u00c1' # write &quot;Á&quot;&amp;#10;                        isAccented = False # remove accent flag for subsequent keys&amp;#10;                    elif keys[i]=='e': # and 'e' is pressed&amp;#10;                        inputText += '\u00c9'# write &quot;É&quot;&amp;#10;                        isAccented = False # remove accent flag for subsequent keys&amp;#10;                    elif keys[i]=='i': # and 'i' is pressed&amp;#10;                        inputText += '\u00cd' # write &quot;Í&quot;&amp;#10;                        isAccented = False # remove accent flag for subsequent keys&amp;#10;                    elif keys[i]=='o': # and 'o' is pressed&amp;#10;                        inputText += '\u00d3' # write &quot;Ó&quot;&amp;#10;                        isAccented = False # remove accent flag for subsequent keys&amp;#10;                    elif keys[i]=='u': # and 'u' is pressed&amp;#10;                        inputText += '\u00da' # write &quot;Ú&quot;&amp;#10;                        isAccented = False # remove accent flag for subsequent keys&amp;#10;                        &amp;#10;                    # write key as it is (in capital letters)&amp;#10;                    inputText += keys[i].upper();&amp;#10;                    thisExp.addData('questionnaireResponse', inputText) # save data&amp;#10;                    i = i + 1 # index another key press&amp;#10;    else:&amp;#10;        thisExp.addData('questionnaireResponse', keys[i]) # save data&amp;#10;        continueRoutine = False&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;i = 0;&amp;#10;console.log(&quot;NO KEY PRESSED&quot;);&amp;#10;if (keys.length) {&amp;#10;    console.log(&quot;KEY PRESSED&quot;);&amp;#10;    debugText += keys[i];&amp;#10;    if ((keys[i] === &quot;escape&quot;)) {&amp;#10;        console.log(&quot;ESCAPE&quot;);&amp;#10;        quitPsychoJS('Has presionado ESC. El estudio ha finalizado. ¡Gracias por participar!', false);&amp;#10;     }&amp;#10;    if (_pj.in_es6(itemLabel, typeItems)) {&amp;#10;        console.log(&quot;itemLabel is in typeItems&quot;);&amp;#10;        if ((keys[i] === &quot;return&quot;)) {&amp;#10;            console.log(&quot;RETURN&quot;);&amp;#10;            if ((itemLabel === &quot;language2&quot;)) {&amp;#10;                language2 = inputText;&amp;#10;                if ((language2==='')){&amp;#10;                    language3='';&amp;#10;                  }&amp;#10;                psychoJS.experiment.addData(&quot;questionnaireResponse&quot;, inputText);&amp;#10;                continueRoutine = false;&amp;#10;            } else {&amp;#10;                if ((itemLabel === &quot;language3&quot;)) {&amp;#10;                    language3 = inputText;&amp;#10;                    psychoJS.experiment.addData(&quot;questionnaireResponse&quot;, inputText);&amp;#10;                    continueRoutine = false;&amp;#10;                } else {&amp;#10;                    if (((itemLabel === &quot;demographicsAge&quot;) || (itemLabel === &quot;demographicsCity&quot;))) {&amp;#10;                        if ((inputText !== &quot;&quot;)) {&amp;#10;                            psychoJS.experiment.addData(&quot;questionnaireResponse&quot;, inputText);&amp;#10;                            continueRoutine = false;&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        console.log(&quot;itemLabel NOT in typeItems&quot;);&amp;#10;                        if ((keys[i] === &quot;backspace&quot;)) {&amp;#10;                            inputText = inputText.slice(0, (- 1));&amp;#10;                        } else {&amp;#10;                            if ((keys[i] === &quot;minus&quot;)) {&amp;#10;                                inputText += &quot;'&quot;;&amp;#10;                            } else {&amp;#10;                                if ((keys[i] === &quot;semicolon&quot;)) {&amp;#10;                                    inputText += &quot;\u00d1&quot;;&amp;#10;                                } else {&amp;#10;                                    if ((keys[i] === &quot;apostrophe&quot;)) {&amp;#10;                                        isAccented = true;&amp;#10;                                    } else {&amp;#10;                                        if (isAccented) {&amp;#10;                                            if ((keys[i] === &quot;a&quot;)) {&amp;#10;                                                inputText += &quot;\u00c1&quot;;&amp;#10;                                                isAccented = false;&amp;#10;                                            } else {&amp;#10;                                                if ((keys[i] === &quot;e&quot;)) {&amp;#10;                                                    inputText += &quot;\u00c9&quot;;&amp;#10;                                                    isAccented = false;&amp;#10;                                                } else {&amp;#10;                                                    if ((keys[i] === &quot;i&quot;)) {&amp;#10;                                                        inputText += &quot;\u00cd&quot;;&amp;#10;                                                        isAccented = false;&amp;#10;                                                    } else {&amp;#10;                                                        if ((keys[i] === &quot;o&quot;)) {&amp;#10;                                                            inputText += &quot;\u00d3&quot;;&amp;#10;                                                            isAccented = false;&amp;#10;                                                        } else {&amp;#10;                                                            if ((keys[i] === &quot;u&quot;)) {&amp;#10;                                                                inputText += &quot;\u00da&quot;;&amp;#10;                                                                isAccented = false;&amp;#10;                                                            }&amp;#10;                                                        }&amp;#10;                                                    }&amp;#10;                                                }&amp;#10;                                            }&amp;#10;                                            inputText += keys[i].toUpperCase();&amp;#10;                                            psychoJS.experiment.addData(&quot;questionnaireResponse&quot;, inputText);&amp;#10;                                            i = (i + 1);&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        psychoJS.experiment.addData(&quot;questionnaireResponse&quot;, keys[i]);&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="questionnaireCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL1">
      <TextComponent name="languageL1TextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL1TextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL1Text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL1Text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Cuál es tu lengua NATIVA?&amp;#10;&amp;#10;e) Español/Castellano&amp;#10;c) Catalán&amp;#10;i) Inglés&amp;#10;o) Otra&amp;#10;&amp;#10;Por favor, presiona la letra correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL1TextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL1TextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona la letra correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageL1Key">
        <Param name="allowedKeys" updates="constant" val="'e', 'c', 'i', 'o', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageL1Key" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageL1Code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL1Code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL2">
      <TextComponent name="languageL2TextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL2TextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2Text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL2Text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Conoces una SEGUNDA LENGUA, distinta de la que has indicado anteriormente? Si es así, escribe cuál y presiona ENTER. Si no, presiona ENTER sin escribir nada." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2TextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL2TextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona ENTER para continuar." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2TextInput">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="languageL2TextInput" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="'&gt; ' + $inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="languageL2Code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.eventManager.clearEvents();&amp;#10;inputText = &quot;&quot;;&amp;#10;isAccented = false;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="psychopy.event.clearEvents()&amp;#10;inputText = ''&amp;#10;isAccented = False&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;i = 0 # index whether how many keys have been previously pressed&amp;#10;&amp;#10;# Keys are mapped onto a Spanish keyboard&amp;#10;&amp;#10;if len(keys): # if any key has been pressed...&amp;#10;&amp;#10;     # ... and ESCAPE is pressed, quit experiment&amp;#10;    if keys[i]=='escape':&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        core.quit()&amp;#10;        # ... and RETURN is pressed, stop trial&amp;#10;    if (keys[i]=='return'):&amp;#10;        language2value = inputText&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        continueRoutine = False &amp;#10;    # ... and BACKSPACE is pressed, delete last character&amp;#10;    elif (keys[i]=='backspace'):&amp;#10;        inputText = inputText[:-1]&amp;#10;    # and 'minus' is pressed, add apostrophe&amp;#10;    elif (keys[i]=='minus'):&amp;#10;        inputText += &quot;'&quot;&amp;#10;    elif (keys[i]=='semicolon'): # if 'semicolon' is pressed, write 'ñ'&amp;#10;        inputText += '\u00d1' &amp;#10;    # and 'apostrophe' is pressed, flag accent&amp;#10;    elif (keys[i]=='apostrophe'):&amp;#10;        isAccented = True&amp;#10;    # ... and any other allowed key is pressed, print it&amp;#10;    elif (isAccented): # if accent is flagged&amp;#10;        if keys[i]=='a': # and 'a' is pressed&amp;#10;            inputText += '\u00c1' # write &quot;Á&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='e'): # and 'e' is pressed&amp;#10;            inputText += '\u00c9'# write &quot;É&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='i'): # and 'i' is pressed&amp;#10;            inputText += '\u00cd' # write &quot;Í&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='o'): # and 'o' is pressed&amp;#10;            inputText += '\u00d3' # write &quot;Ó&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='u'): # and 'u' is pressed&amp;#10;            inputText += '\u00da' # write &quot;Ú&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        else:&amp;#10;            isAccented = False&amp;#10;            &amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        i = i + 1 # index another key press&amp;#10;            &amp;#10;    else:&amp;#10;        # write key as it is (in capital letters)&amp;#10;        inputText += keys[i].upper()&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        i = i + 1 # index another key press" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys();&amp;#10;i = 0;&amp;#10;if (keys.length) {&amp;#10;    if ((keys[i] === &quot;escape&quot;)) {&amp;#10;        psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;        psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;    }&amp;#10;    if ((keys[i] === &quot;return&quot;)) {&amp;#10;        languageL2value = inputText;&amp;#10;        if ((languageL2value == &quot;&quot;)) {&amp;#10;            languageL3value=&quot;&quot;;&amp;#10;            }&amp;#10;        psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if ((keys[i] === &quot;backspace&quot;)) {&amp;#10;            inputText = inputText.slice(0, (- 1));&amp;#10;        } else {&amp;#10;            if ((keys[i] === &quot;minus&quot;)) {&amp;#10;                inputText += &quot;'&quot;;&amp;#10;            } else {&amp;#10;                if ((keys[i] === &quot;semicolon&quot;)) {&amp;#10;                    inputText += &quot;\u00d1&quot;;&amp;#10;                } else {&amp;#10;                    if ((keys[i] === &quot;apostrophe&quot;)) {&amp;#10;                        isAccented = true;&amp;#10;                    } else {&amp;#10;                        if (isAccented) {&amp;#10;                            if ((keys[i] === &quot;a&quot;)) {&amp;#10;                                inputText += &quot;\u00c1&quot;;&amp;#10;                                isAccented = false;&amp;#10;                            } else {&amp;#10;                                if ((keys[i] === &quot;e&quot;)) {&amp;#10;                                    inputText += &quot;\u00c9&quot;;&amp;#10;                                    isAccented = false;&amp;#10;                                } else {&amp;#10;                                    if ((keys[i] === &quot;i&quot;)) {&amp;#10;                                        inputText += &quot;\u00cd&quot;;&amp;#10;                                        isAccented = false;&amp;#10;                                    } else {&amp;#10;                                        if ((keys[i] === &quot;o&quot;)) {&amp;#10;                                            inputText += &quot;\u00d3&quot;;&amp;#10;                                            isAccented = false;&amp;#10;                                        } else {&amp;#10;                                            if ((keys[i] === &quot;u&quot;)) {&amp;#10;                                                inputText += &quot;\u00da&quot;;&amp;#10;                                                isAccented = false;&amp;#10;                                            } else {&amp;#10;                                                isAccented = false;&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                            psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;                            i = (i + 1);&amp;#10;                        } else {&amp;#10;                            inputText += keys[i].toUpperCase();&amp;#10;                            psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;                            i = (i + 1);&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="console.log(languageL2value);" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="print(languageL2value)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL2Code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL3">
      <TextComponent name="languageL3TextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL3TextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3Text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL3Text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Conoces una TERCERA LENGUA, distinta de la que has indicado anteriormente? Si es así, escribe cuál y presiona ENTER. Si no, presiona ENTER sin escribir nada." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3TextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL3TextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona ENTER para continuar." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3TextInput">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="languageL3TextInput" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="'&gt; ' + $inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="languageL3Code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.eventManager.clearEvents();&amp;#10;inputText = &quot;&quot;;&amp;#10;isAccented = false;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="psychopy.event.clearEvents()&amp;#10;inputText = ''&amp;#10;isAccented = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if languageL2=='':&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;i = 0 # index whether how many keys have been previously pressed&amp;#10;&amp;#10;# keys are mapped onto a Spanish keyboard&amp;#10;&amp;#10;if len(keys): # if any key has been pressed...&amp;#10;&amp;#10;     # ... and ESCAPE is pressed, quit experiment&amp;#10;    if keys[i]=='escape':&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        core.quit()&amp;#10;        # ... and RETURN is pressed, stop trial&amp;#10;    elif (keys[i]=='return'):&amp;#10;        language2 = inputText&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        continueRoutine = False&amp;#10;    # ... and BACKSPACE is pressed, delete last character&amp;#10;    elif (keys[i]=='backspace'):&amp;#10;        inputText = inputText[:-1]&amp;#10;    # and 'minus' is pressed, add apostrophe&amp;#10;    elif (keys[i]=='minus'):&amp;#10;        inputText += &quot;'&quot;&amp;#10;    elif (keys[i]=='semicolon'): # if 'semicolon' is pressed, write 'ñ'&amp;#10;        inputText += '\u00d1'&amp;#10;    # and 'apostrophe' is pressed, flag accent&amp;#10;    elif (keys[i]=='apostrophe'):&amp;#10;        isAccented = True&amp;#10;    # ... and any other allowed key is pressed, print it&amp;#10;    elif (isAccented): # if accent is flagged&amp;#10;        if keys[i]=='a': # and 'a' is pressed&amp;#10;            inputText += '\u00c1' # write &quot;Á&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='e'): # and 'e' is pressed&amp;#10;            inputText += '\u00c9'# write &quot;É&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='i'): # and 'i' is pressed&amp;#10;            inputText += '\u00cd' # write &quot;Í&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='o'): # and 'o' is pressed&amp;#10;            inputText += '\u00d3' # write &quot;Ó&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='u'): # and 'u' is pressed&amp;#10;            inputText += '\u00da' # write &quot;Ú&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        else:&amp;#10;            isAccented = False&amp;#10;&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        i = i + 1 # index another key press&amp;#10;&amp;#10;    else:&amp;#10;        # write key as it is (in capital letters)&amp;#10;        inputText += keys[i].upper()&amp;#10;        thisExp.addData('languageL2', inputText) # save data&amp;#10;        i = i + 1 # index another key press&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((languageL2value === &quot;&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;i = 0;&amp;#10;if (keys.length) {&amp;#10;    if ((keys[i] === &quot;escape&quot;)) {&amp;#10;        psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;        psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;    } else {&amp;#10;        if ((keys[i] === &quot;return&quot;)) {&amp;#10;            languageL3value = inputText;&amp;#10;            psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;            continueRoutine = false;&amp;#10;        } else {&amp;#10;            if ((keys[i] === &quot;backspace&quot;)) {&amp;#10;                inputText = inputText.slice(0, (- 1));&amp;#10;            } else {&amp;#10;                if ((keys[i] === &quot;minus&quot;)) {&amp;#10;                    inputText += &quot;'&quot;;&amp;#10;                } else {&amp;#10;                    if ((keys[i] === &quot;semicolon&quot;)) {&amp;#10;                        inputText += &quot;\u00d1&quot;;&amp;#10;                    } else {&amp;#10;                        if ((keys[i] === &quot;apostrophe&quot;)) {&amp;#10;                            isAccented = true;&amp;#10;                        } else {&amp;#10;                            if (isAccented) {&amp;#10;                                if ((keys[i] === &quot;a&quot;)) {&amp;#10;                                    inputText += &quot;\u00c1&quot;;&amp;#10;                                    isAccented = false;&amp;#10;                                } else {&amp;#10;                                    if ((keys[i] === &quot;e&quot;)) {&amp;#10;                                        inputText += &quot;\u00c9&quot;;&amp;#10;                                        isAccented = false;&amp;#10;                                    } else {&amp;#10;                                        if ((keys[i] === &quot;i&quot;)) {&amp;#10;                                            inputText += &quot;\u00cd&quot;;&amp;#10;                                            isAccented = false;&amp;#10;                                        } else {&amp;#10;                                            if ((keys[i] === &quot;o&quot;)) {&amp;#10;                                                inputText += &quot;\u00d3&quot;;&amp;#10;                                                isAccented = false;&amp;#10;                                            } else {&amp;#10;                                                if ((keys[i] === &quot;u&quot;)) {&amp;#10;                                                    inputText += &quot;\u00da&quot;;&amp;#10;                                                    isAccented = false;&amp;#10;                                                } else {&amp;#10;                                                    isAccented = false;&amp;#10;                                                }&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                                psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;                                i = (i + 1);&amp;#10;                            } else {&amp;#10;                                inputText += keys[i].toUpperCase();&amp;#10;                                psychoJS.experiment.addData(&quot;languageL2&quot;, inputText);&amp;#10;                                i = (i + 1);&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="console.log(languageL3value);" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="print(languageL3)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL3Code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL2Oral">
      <TextComponent name="languageL2OralTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL2OralTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2OralText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL2OralText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="En una escala de 1-5, ¿cómo puntuarías tu capacidad de COMPRENSIÓN ORAL de tu SEGUNDA LENGUA?&amp;#10;&amp;#10;1) No entiendo prácticamente nada&amp;#10;2) Entiendo algunas palabras&amp;#10;3) Entiendo de qué va la conversación/algunas frases&amp;#10;4) Entiendo casi todo&amp;#10;5) Como un/a nativo/a o soy nativo/a&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2OralTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL2OralTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageL2OralKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageL2OralKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageL2OralCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if languageL2=='':&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((languageL2value===&quot;&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;    }&amp;#10;&amp;#10;var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL2OralCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL2Written">
      <TextComponent name="languageL2WrittenTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL2WrittenTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2WrittenText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL2WrittenText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="En una escala de 1-5, ¿cómo puntuarías tu ORTOGRAFÍA en tu SEGUNDA LENGUA?&amp;#10;&amp;#10;1) No he recibido educación en la ortografía de esta lengua&amp;#10;2) Cometo muchas faltas de ortografía&amp;#10;3) Cometo bastantes faltas de ortografía&amp;#10;4) Cometo algunas faltas de ortografía&amp;#10;5) No cometo ninguna falta de ortografía" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL2WrittenTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL2WrittenTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageL2WrittenKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageL2WrittenKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageL2WrittenCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if languageL2=='':&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((languageL2value === &quot;&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL2WrittenCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL3Oral">
      <TextComponent name="languageL3OralTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL3OralTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3OralText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL3OralText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="En una escala de 1-5, ¿cómo puntuarías tu capacidad de COMPRENSIÓN ORAL de tu TERCERA LENGUA?&amp;#10;&amp;#10;1) No entiendo prácticamente nada&amp;#10;2) Entiendo algunas palabras&amp;#10;3) Entiendo de qué va la conversación/algunas frases&amp;#10;4) Entiendo casi todo&amp;#10;5) Como un/a nativo/a o soy nativo/a" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3OralTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL3OralTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Por favor, presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageL3OralKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3','4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageL3OralKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageL3OralCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if languageL3=='' or languageL2=='':&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((languageL2value === &quot;&quot; || languageL3value === &quot;&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL3OralCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageCatalanOral">
      <TextComponent name="languageCatalanOralTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanOralTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageCatalanOralText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanOralText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="En una escala de 1-5, ¿cómo puntuarías tu capacidad de COMPRENSIÓN ORAL en CATALÁN?&amp;#10;&amp;#10;1) No entiendo prácticamente nada&amp;#10;2) Entiendo algunas palabras&amp;#10;3) Entiendo de qué va la conversación/algunas frases&amp;#10;4) Entiendo casi todo&amp;#10;5) Como un/a nativo/a o soy nativo/a" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageCatalanOralTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanOralTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageCatalanOralKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageCatalanOralKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageCatalanOralCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageCatalanOralCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageL3Written">
      <TextComponent name="languageL3WrittenTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageL3WrittenTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3WrittenText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL3WrittenText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="En una escala de 1-5, ¿cómo puntuarías tu ORTOGRAFÍA en tu TERCERA LENGUA?&amp;#10;&amp;#10;1) No he recibido educación en la ortografía de esta lengua&amp;#10;2) Cometo muchas faltas de ortografía&amp;#10;3) Cometo bastantes faltas de ortografía&amp;#10;4) Cometo algunas faltas de ortografía&amp;#10;5) No cometo ninguna falta de ortografía" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageL3WrittenTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageL3WrittenTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Por favor, presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageL3WrittenKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageL3WrittenKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageL3WrittenCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if languageL3=='':&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((languageL2value === &quot;&quot; || languageL3value=== &quot;&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageL3WrittenCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageCatalanWritten">
      <TextComponent name="languageCatalanWrittenTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanWrittenTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageCatalanWrittenText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanWrittenText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="En una escala de 1-5, ¿cómo puntuarías tu ORTOGRAFÍA en CATALÁN?&amp;#10;&amp;#10;1) No he recibido educación en la ortografía de esta lengua&amp;#10;2) Cometo muchas faltas de ortografía&amp;#10;3) Cometo bastantes faltas de ortografía&amp;#10;4) Cometo algunas faltas de ortografía&amp;#10;5) No cometo ninguna falta de ortografía" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageCatalanWrittenTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanWrittenTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageCatalanWrittenKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageCatalanWrittenKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageCatalanWrittenCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageCatalanWrittenCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="languageCatalanTime">
      <TextComponent name="languageCatalanTimeTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanTimeTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="CUESTIONARIO DE LENGUAS" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageCatalanTimeText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanTimeText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Cuánto tiempo has pasado en REGIONES donde se habla CATALÁN (Cataluña, Comunidad Valenciana, Islas Baleares), incluyendo tu infancia? Escoge la opción que mejor describe tu situación:&amp;#10;&amp;#10;1) Nunca o menos de 1 mes&amp;#10;2) Entre 1 y 3 meses&amp;#10;3) Solía pasar las vacaciones allí&amp;#10;4) He vivido allí por menos de 6 meses&amp;#10;5) He vivido allí por 6 o más meses" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="languageCatalanTimeTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="languageCatalanTimeTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="languageCatalanTimeKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="languageCatalanTimeKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="languageCatalanTimeCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    core.quit();&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="languageCatalanTimeCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="demoAge">
      <TextComponent name="demoAgeTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="demoAgeTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoAgeText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoAgeText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Por favor, escribe tu edad (en años) y después presiona ENTER:" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoAgeTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoAgeTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona ENTER para continuar." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoAgeTextInput">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="demoAgeTextInput" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="'&gt; ' + $inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="demoAgeCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.eventManager.clearEvents();&amp;#10;inputText = &quot;&quot;;&amp;#10;isAccented = false;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="psychopy.event.clearEvents()&amp;#10;inputText = ''&amp;#10;isAccented = False&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys(keylist:['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'escape', 'backspace', 'return'])&amp;#10;i = 0 # index whether how many keys have been previously pressed&amp;#10;&amp;#10;# Keys are mapped onto a Spanish keyboard&amp;#10;&amp;#10;if len(keys): # if any key has been pressed...&amp;#10;&amp;#10;     # ... and ESCAPE is pressed, quit experiment&amp;#10;    if keys[i]=='escape':&amp;#10;        age = inputText&amp;#10;        thisExp.addData('age', inputText) # save data&amp;#10;        core.quit()&amp;#10;        # ... and RETURN is pressed, stop trial&amp;#10;    elif (keys[i]=='return'):&amp;#10;        if (inputText != ''):&amp;#10;            language2 = inputText&amp;#10;            thisExp.addData('age', inputText) # save data&amp;#10;            continueRoutine = False &amp;#10;    # ... and BACKSPACE is pressed, delete last character&amp;#10;    elif (keys[i]=='backspace'):&amp;#10;        inputText = inputText[:-1]&amp;#10;    else:&amp;#10;        # write key as it is (in capital letters)&amp;#10;        inputText += keys[i].upper()&amp;#10;        thisExp.addData('age', inputText) # save data&amp;#10;        i = i + 1 # index another key press&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys({keyList:['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'escape', 'return', 'backspace']});&amp;#10;i = 0;&amp;#10;if (keys.length) {&amp;#10;    if ((keys[i] === &quot;escape&quot;)) {&amp;#10;        psychoJS.experiment.addData(&quot;age&quot;, inputText);&amp;#10;        psychoJS.quit('Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!');&amp;#10;    } else if ((keys[i] === &quot;return&quot; &amp;&amp; inputText !== &quot;&quot;)) {&amp;#10;        psychoJS.experiment.addData(&quot;age&quot;, inputText);&amp;#10;        continueRoutine = false;&amp;#10;    } else if ((keys[i] === &quot;return&quot; &amp;&amp; inputText===&quot;&quot;)) {&amp;#10;        inputText = &quot;&quot;;&amp;#10;    } else if ((keys[i] === &quot;backspace&quot;)) {&amp;#10;        inputText = inputText.slice(0, (- 1));&amp;#10;    } else {&amp;#10;        inputText += keys[i].toUpperCase();&amp;#10;        psychoJS.experiment.addData(&quot;age&quot;, inputText);&amp;#10;        i = (i + 1);&amp;#10;        }&amp;#10;    }" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="print(age)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoAgeCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="demoSex">
      <TextComponent name="demoSexTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="demoSexTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoSexText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoSexText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Sexo:&amp;#10;&amp;#10;m) Mujer&amp;#10;h) Hombre&amp;#10;o) Otro&amp;#10;&amp;#10;Por favor, presiona la letra correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoSexTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoSexTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona la letra correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="demoSexKey">
        <Param name="allowedKeys" updates="constant" val="'m', 'h', 'o', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="demoSexKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="demoSexCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoSexCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="demoEducation">
      <TextComponent name="demoEducationTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="demoEducationTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoEducationText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoEducationText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Cuál es el NIVEL EDUCATIVO más alto que has completado?&amp;#10;&amp;#10;1) Graduado escolar&amp;#10;2) Educación Secundaria Obligatoria (ESO) o equivalente&amp;#10;3) Bachillerato o equivalente&amp;#10;4) Universidad o equivalente&amp;#10;5) Formación Profesional (FP)" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoEducationTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoEducationTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="demoEducationKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3','4', '5', '6', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="demoEducationKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="demoEducationCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoEducationCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="demoCity">
      <TextComponent name="demoCityTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="demoCityTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoCityText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoCityText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿En qué CIUDAD vives? Escríbela y pulsa ENTER para continuar." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoCityTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoCityTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona ENTER para continuar." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoCityTextInput">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.07" valType="code"/>
        <Param name="name" updates="None" val="demoCityTextInput" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="'&gt; ' + $inputText" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="demoCityCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="psychoJS.eventManager.clearEvents();&amp;#10;inputText = &quot;&quot;;&amp;#10;isAccented = false;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="psychopy.event.clearEvents()&amp;#10;inputText = ''&amp;#10;isAccented = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="keys = event.getKeys()&amp;#10;i = 0 # index whether how many keys have been previously pressed&amp;#10;&amp;#10;# Keys are mapped onto a Spanish keyboard&amp;#10;&amp;#10;if len(keys): # if any key has been pressed...&amp;#10;&amp;#10;     # ... and ESCAPE is pressed, quit experiment&amp;#10;    if keys[i]=='escape':&amp;#10;        thisExp.addData('city', inputText) # save data&amp;#10;        core.quit()&amp;#10;    # ... and RETURN is pressed, stop trial&amp;#10;    elif (keys[i]=='return'):&amp;#10;        if (inputText!=''):&amp;#10;            city = inputText&amp;#10;            thisExp.addData('city', inputText) # save data&amp;#10;            continueRoutine = False&amp;#10;    # ... and BACKSPACE is pressed, delete last character&amp;#10;    elif (keys[i]=='backspace'):&amp;#10;        inputText = inputText[:-1]&amp;#10;    # and 'minus' is pressed, add apostrophe&amp;#10;    elif (keys[i]=='minus'):&amp;#10;        inputText += &quot;'&quot;&amp;#10;    elif (keys[i]=='semicolon'): # if 'semicolon' is pressed, write 'ñ'&amp;#10;        inputText += '\u00d1'&amp;#10;    # and 'apostrophe' is pressed, flag accent&amp;#10;    elif (keys[i]=='apostrophe'):&amp;#10;        isAccented = True&amp;#10;    # ... and any other allowed key is pressed, print it&amp;#10;    elif (isAccented): # if accent is flagged&amp;#10;        if keys[i]=='a': # and 'a' is pressed&amp;#10;            inputText += '\u00c1' # write &quot;Á&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='e'): # and 'e' is pressed&amp;#10;            inputText += '\u00c9'# write &quot;É&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='i'): # and 'i' is pressed&amp;#10;            inputText += '\u00cd' # write &quot;Í&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='o'): # and 'o' is pressed&amp;#10;            inputText += '\u00d3' # write &quot;Ó&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        elif (keys[i]=='u'): # and 'u' is pressed&amp;#10;            inputText += '\u00da' # write &quot;Ú&quot;&amp;#10;            isAccented = False # remove accent flag for subsequent keys&amp;#10;        else:&amp;#10;            isAccented = False&amp;#10;&amp;#10;        thisExp.addData('city', inputText) # save data&amp;#10;        i = i + 1 # index another key press&amp;#10;&amp;#10;    else:&amp;#10;        # write key as it is (in capital letters)&amp;#10;        inputText += keys[i].upper()&amp;#10;        thisExp.addData('city', inputText) # save data&amp;#10;        i = i + 1 # index another key press&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="keys = psychoJS.eventManager.getKeys();&amp;#10;i = 0;&amp;#10;if (keys.length) {&amp;#10;    if ((keys[i] === &quot;escape&quot;)) {&amp;#10;        psychoJS.experiment.addData(&quot;city&quot;, inputText);&amp;#10;        core.quit();&amp;#10;    } else {&amp;#10;        if ((keys[i] === &quot;return&quot;)) {&amp;#10;            if ((inputText !== &quot;&quot;)) {&amp;#10;                psychoJS.experiment.addData(&quot;city&quot;, inputText);&amp;#10;                continueRoutine = false;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((keys[i] === &quot;backspace&quot;)) {&amp;#10;                inputText = inputText.slice(0, (- 1));&amp;#10;            } else {&amp;#10;                if ((keys[i] === &quot;minus&quot;)) {&amp;#10;                    inputText += &quot;'&quot;;&amp;#10;                } else {&amp;#10;                    if ((keys[i] === &quot;semicolon&quot;)) {&amp;#10;                        inputText += &quot;\u00d1&quot;;&amp;#10;                    } else {&amp;#10;                        if ((keys[i] === &quot;apostrophe&quot;)) {&amp;#10;                            isAccented = true;&amp;#10;                        } else {&amp;#10;                            if (isAccented) {&amp;#10;                                if ((keys[i] === &quot;a&quot;)) {&amp;#10;                                    inputText += &quot;\u00c1&quot;;&amp;#10;                                    isAccented = false;&amp;#10;                                } else {&amp;#10;                                    if ((keys[i] === &quot;e&quot;)) {&amp;#10;                                        inputText += &quot;\u00c9&quot;;&amp;#10;                                        isAccented = false;&amp;#10;                                    } else {&amp;#10;                                        if ((keys[i] === &quot;i&quot;)) {&amp;#10;                                            inputText += &quot;\u00cd&quot;;&amp;#10;                                            isAccented = false;&amp;#10;                                        } else {&amp;#10;                                            if ((keys[i] === &quot;o&quot;)) {&amp;#10;                                                inputText += &quot;\u00d3&quot;;&amp;#10;                                                isAccented = false;&amp;#10;                                            } else {&amp;#10;                                                if ((keys[i] === &quot;u&quot;)) {&amp;#10;                                                    inputText += &quot;\u00da&quot;;&amp;#10;                                                    isAccented = false;&amp;#10;                                                } else {&amp;#10;                                                    isAccented = false;&amp;#10;                                                }&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                                psychoJS.experiment.addData(&quot;city&quot;, inputText);&amp;#10;                                i = (i + 1);&amp;#10;                            } else {&amp;#10;                                inputText += keys[i].toUpperCase();&amp;#10;                                psychoJS.experiment.addData(&quot;city&quot;, inputText);&amp;#10;                                i = (i + 1);&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="print(city)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoCityCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="demoVision">
      <TextComponent name="demoVisionTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="demoVisionTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoVisionText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoVisionText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Tienes problemas de VISIÓN que unas gafas o lentes de contacto NO corrijan?&amp;#10;&amp;#10;s) Sí&amp;#10;n) No" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoVisionTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoVisionTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona la letra correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="demoVisionKey">
        <Param name="allowedKeys" updates="constant" val="'s', 'n', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="demoVisionKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="demoVisionCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoVisionCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="demoLanguage">
      <TextComponent name="demoLanguageTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="demoLanguageTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoLanguageText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoLanguageText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Se te ha diagnosticado algún TRASTORNO DEL LENGUAJE (como DISLEXIA) o de la AUDICIÓN?&amp;#10;&amp;#10;s) Sí&amp;#10;n) No" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="demoLanguageTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="demoLanguageTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona la letra correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="demoLanguageKey">
        <Param name="allowedKeys" updates="constant" val="'s', 'n', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="demoLanguageKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="demoLanguageCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoLanguageCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="setupNoise">
      <TextComponent name="setupNoiseTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="setupNoiseTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="INFORMACIÓN DEMOGRÁFICA" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="setupNoiseText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="setupNoiseText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Puntúa el RUIDO ambiental del lugar donde estás completando este experimento:&amp;#10;&amp;#10;1) Muy silencioso (como una biblioteca)&amp;#10;2) Algo silencioso (como una oficina)&amp;#10;3) Algo ruidoso (como estar en el parque)&amp;#10;4) Muy ruidoso (como estar en una calle ajetreada)" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="setupNoiseTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="setupNoiseTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="setupNoiseKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3','4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="setupNoiseKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="setupNoiseCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="setupNoiseCode" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="setupLocation">
      <TextComponent name="setupLocationTextTitle">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.11" valType="code"/>
        <Param name="name" updates="None" val="setupLocationTextTitle" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="PREPARACIÓN" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="setupLocationText">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="setupLocationText" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="¿Dónde estás llevando a cabo este estudio?&amp;#10;&amp;#10;1) En casa&amp;#10;2) En la biblioteca&amp;#10;3) En una cafetería o restaurante&amp;#10;4) En casa de un/a amigo/a&amp;#10;5) En la escuela&amp;#10;6) En el trabajo&amp;#10;7) Otro&amp;#10;&amp;#10;Por favor, presiona el número correspondiente.&amp;#10;" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="setupLocationTextNext">
        <Param name="color" updates="constant" val="yellow" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.06" valType="code"/>
        <Param name="name" updates="None" val="setupLocationTextNext" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.8)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Presiona el número correspondiente." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="setupLocationKey">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3','4', '5', 'escape'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="setupLocationKey" valType="code"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="setupLocationCode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Both" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# if ESCAPE is pressed, quit experiment&amp;#10;keys = event.getKeys(keyList = ['escape', 'space'])&amp;#10;n = len(keys)&amp;#10;&amp;#10;if ('escape' in keys):&amp;#10;    core.quit()" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = psychoJS.eventManager.getKeys({&quot;keyList&quot;: [&quot;escape&quot;, &quot;space&quot;]});&amp;#10;n = keys.length;&amp;#10;if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;    psychoJS.quit(&quot;Has presionado ESC. El estudio ha terminado. ¡Gracias por participar!&quot;);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="setupLocationCode" valType="code"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <Routine name="welcome"/>
    <Routine name="description"/>
    <Routine name="voluntary"/>
    <Routine name="contact"/>
    <Routine name="confidentiality"/>
    <Routine name="information"/>
    <Routine name="consent"/>
    <Routine name="languageL1"/>
    <Routine name="languageL2"/>
    <Routine name="languageL2Oral"/>
    <Routine name="languageL2Written"/>
    <Routine name="languageL3"/>
    <Routine name="languageL3Oral"/>
    <Routine name="languageL3Written"/>
    <Routine name="languageCatalanOral"/>
    <Routine name="languageCatalanWritten"/>
    <Routine name="languageCatalanTime"/>
    <Routine name="demoAge"/>
    <Routine name="demoSex"/>
    <Routine name="demoEducation"/>
    <Routine name="demoCity"/>
    <Routine name="demoVision"/>
    <Routine name="demoLanguage"/>
    <Routine name="setupLocation"/>
    <Routine name="setupNoise"/>
    <Routine name="instructions"/>
    <Routine name="instructions2"/>
    <LoopInitiator loopType="TrialHandler" name="trials_practice">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trial_id', 109), ('word', 'arbre'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_arbre.wav')]), OrderedDict([('trial_id', 147), ('word', 'jaqueta'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_jaqueta.wav')]), OrderedDict([('trial_id', 159), ('word', 'onada'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_onada.wav')]), OrderedDict([('trial_id', 167), ('word', 'pingui'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_pingui.wav')]), OrderedDict([('trial_id', 179), ('word', 'tigre'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_tigre.wav')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Trials/01_trials_practice.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_practice" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials_practice"/>
    <Routine name="begin"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trial_id', 104), ('word', 'abella'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_abella.wav')]), OrderedDict([('trial_id', 105), ('word', 'aigua'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_aigua.wav')]), OrderedDict([('trial_id', 106), ('word', 'aixeta'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_aixeta.wav')]), OrderedDict([('trial_id', 107), ('word', 'amanida'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_amanida.wav')]), OrderedDict([('trial_id', 108), ('word', 'ampolla'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_ampolla.wav')]), OrderedDict([('trial_id', 110), ('word', 'berenar'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_berenar.wav')]), OrderedDict([('trial_id', 111), ('word', 'bibero'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_bibero.wav')]), OrderedDict([('trial_id', 112), ('word', 'bici'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_bici.wav')]), OrderedDict([('trial_id', 113), ('word', 'boca'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_boca.wav')]), OrderedDict([('trial_id', 114), ('word', 'bol'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_bol.wav')]), OrderedDict([('trial_id', 115), ('word', 'bolet'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_bolet.wav')]), OrderedDict([('trial_id', 116), ('word', 'bolquer'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_bolquer.wav')]), OrderedDict([('trial_id', 117), ('word', 'boto'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_boto.wav')]), OrderedDict([('trial_id', 118), ('word', 'bou'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_bou.wav')]), OrderedDict([('trial_id', 119), ('word', 'caixa'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_caixa.wav')]), OrderedDict([('trial_id', 120), ('word', 'cama'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_cama.wav')]), OrderedDict([('trial_id', 121), ('word', 'camisa'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_camisa.wav')]), OrderedDict([('trial_id', 122), ('word', 'casa'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_casa.wav')]), OrderedDict([('trial_id', 123), ('word', 'cavall'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_cavall.wav')]), OrderedDict([('trial_id', 124), ('word', 'cirera'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_cirera.wav')]), OrderedDict([('trial_id', 125), ('word', 'colom'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_colom.wav')]), OrderedDict([('trial_id', 126), ('word', 'corona'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_corona.wav')]), OrderedDict([('trial_id', 127), ('word', 'cotxe'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_cotxe.wav')]), OrderedDict([('trial_id', 128), ('word', 'cuc'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_cuc.wav')]), OrderedDict([('trial_id', 129), ('word', 'dit'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_dit.wav')]), OrderedDict([('trial_id', 130), ('word', 'entrepa'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_entrepa.wav')]), OrderedDict([('trial_id', 131), ('word', 'esponja'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_esponja.wav')]), OrderedDict([('trial_id', 132), ('word', 'estrella'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_estrella.wav')]), OrderedDict([('trial_id', 133), ('word', 'estruc'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_estruc.wav')]), OrderedDict([('trial_id', 134), ('word', 'flor'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_flor.wav')]), OrderedDict([('trial_id', 135), ('word', 'formiga'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_formiga.wav')]), OrderedDict([('trial_id', 136), ('word', 'forquilla'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_forquilla.wav')]), OrderedDict([('trial_id', 137), ('word', 'fulla'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_fulla.wav')]), OrderedDict([('trial_id', 138), ('word', 'galeta'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_galeta.wav')]), OrderedDict([('trial_id', 139), ('word', 'galleda'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_galleda.wav')]), OrderedDict([('trial_id', 140), ('word', 'gat'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_gat.wav')]), OrderedDict([('trial_id', 141), ('word', 'gerd'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_gerd.wav')]), OrderedDict([('trial_id', 142), ('word', 'girafa'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_girafa.wav')]), OrderedDict([('trial_id', 143), ('word', 'globus'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_globus.wav')]), OrderedDict([('trial_id', 144), ('word', 'gorra'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_gorra.wav')]), OrderedDict([('trial_id', 145), ('word', 'got'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_got.wav')]), OrderedDict([('trial_id', 146), ('word', 'guitarra'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_guitarra.wav')]), OrderedDict([('trial_id', 148), ('word', 'lleo'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_lleo.wav')]), OrderedDict([('trial_id', 149), ('word', 'llibre'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_llibre.wav')]), OrderedDict([('trial_id', 150), ('word', 'lloro'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_lloro.wav')]), OrderedDict([('trial_id', 151), ('word', 'lluna'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_lluna.wav')]), OrderedDict([('trial_id', 152), ('word', 'ma'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_ma.wav')]), OrderedDict([('trial_id', 153), ('word', 'mico'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_mico.wav')]), OrderedDict([('trial_id', 154), ('word', 'mirall'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_mirall.wav')]), OrderedDict([('trial_id', 155), ('word', 'moneda'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_moneda.wav')]), OrderedDict([('trial_id', 156), ('word', 'moto'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_moto.wav')]), OrderedDict([('trial_id', 157), ('word', 'mussol'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_mussol.wav')]), OrderedDict([('trial_id', 158), ('word', 'nas'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_nas.wav')]), OrderedDict([('trial_id', 160), ('word', 'orella'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_orella.wav')]), OrderedDict([('trial_id', 161), ('word', 'ovella'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_ovella.wav')]), OrderedDict([('trial_id', 162), ('word', 'pa'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_pa.wav')]), OrderedDict([('trial_id', 163), ('word', 'papallona'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_papallona.wav')]), OrderedDict([('trial_id', 164), ('word', 'patata'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_patata.wav')]), OrderedDict([('trial_id', 165), ('word', 'pernil'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_pernil.wav')]), OrderedDict([('trial_id', 166), ('word', 'peu'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_peu.wav')]), OrderedDict([('trial_id', 168), ('word', 'planta'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_planta.wav')]), OrderedDict([('trial_id', 169), ('word', 'plat'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_plat.wav')]), OrderedDict([('trial_id', 170), ('word', 'ploma'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_ploma.wav')]), OrderedDict([('trial_id', 171), ('word', 'pollastre'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_pollastre.wav')]), OrderedDict([('trial_id', 172), ('word', 'poma'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_poma.wav')]), OrderedDict([('trial_id', 173), ('word', 'porc'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_porc.wav')]), OrderedDict([('trial_id', 174), ('word', 'porta'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_porta.wav')]), OrderedDict([('trial_id', 175), ('word', 'raspall'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_raspall.wav')]), OrderedDict([('trial_id', 176), ('word', 'samarreta'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_samarreta.wav')]), OrderedDict([('trial_id', 177), ('word', 'sol'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_sol.wav')]), OrderedDict([('trial_id', 178), ('word', 'taronja'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_taronja.wav')]), OrderedDict([('trial_id', 180), ('word', 'tisores'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_tisores.wav')]), OrderedDict([('trial_id', 181), ('word', 'tobogan'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_tobogan.wav')]), OrderedDict([('trial_id', 182), ('word', 'tomaquet'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_tomaquet.wav')]), OrderedDict([('trial_id', 183), ('word', 'tren'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_tren.wav')]), OrderedDict([('trial_id', 184), ('word', 'ull'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_ull.wav')]), OrderedDict([('trial_id', 185), ('word', 'ulleres'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_ulleres.wav')]), OrderedDict([('trial_id', 187), ('word', 'vaixell'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_vaixell.wav')]), OrderedDict([('trial_id', 188), ('word', 'xocolata'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_xocolata.wav')]), OrderedDict([('trial_id', 189), ('word', 'zebra'), ('test_language', 'Catalan'), ('soundfile', 'Sounds/cat_zebra.wav')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Trials/02_trials_catalan.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="fixation"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="farewell"/>
  </Flow>
</PsychoPy2experiment>
